.data

	somando: .asciiz "ADD: " 
	subtraindo: .asciiz "SUB: "
	e: .asciiz "AND: "
	ou: .asciiz "OR: "
	orx: .asciiz "XOR: "
	masc: .asciiz "MASK: "
	shift_left: .asciiz "SLL"
	shift_right: .asciiz "SRL"
	p1: .asciiz "("
	p2: .asciiz "): "
	pula_linha: .asciiz "\n"
	
	
.text
main:
	
	li $v0, 5 # lendo o valor de a, do tipo inteiro	
	syscall
	move $t0, $v0		
	
	
	li $v0, 5 # lendo o valor de b, do tipo inteiro		
	syscall
	move $t1, $v0	
		
	
	li $v0, 5 # # lendo o valor de c, do tipo inteiro		
	syscall
	move $t2, $v0		
	
	
	add $t3, $t0, $t1 # somando o t3, t0 e t1
	li $v0, 4		
	la $a0, somando		
	syscall
	
	li $v0, 1		
	move $a0, $t3		
	syscall
	
	li $v0, 4		
	la $a0, pula_linha # pulando uma linha
	syscall
	
	
	
	sub $t3, $t0, $t1	
	li $v0, 4		
	la $a0, subtraindo # subtraindo o t3, t0 e t1	
	syscall
	
	li $v0, 1		
	move $a0, $t3	# lendo o nuemro 1
	syscall
	
	li $v0, 4		
	la $a0, pula_linha # pulando uma linha	
	syscall
	
	
	and $t3, $t0, $t1 # and
	li $v0, 4		
	la $a0, e	
	syscall
	
	li $v0, 1 # lendo o inteiro
	move $a0, $t3		
	syscall
	
	li $v0, 4		
	la $a0, pula_linha # pulando uma linha	
	syscall
	
	
	or $t3, $t0, $t1 # or
	li $v0, 4		
	la $a0, ou	
	syscall
	
	
	li $v0, 1 # lendo um inteiro	
	move $a0, $t3		
	syscall
	
	li $v0, 4		
	la $a0, pula_linha # pulando uma linha
	syscall
	
	
	
	xor $t3, $t0, $t1 # xor
	li $v0, 4		
	la $a0, orx
	syscall
	
	li $v0, 1 # lendo um inteiro	
	move $a0, $t3		
	syscall
	
	li $v0, 4		
	la $a0, pula_linha # pulando uma linha
	syscall
	
	
	and $t3, $t2, 0x1f # mask 
	li $v0, 4		
	la $a0, masc	
	syscall
	
	li $v0, 1 # lendo um inteiro	
	move $a0, $t3		
	syscall
	
	li $v0, 4		
	la $a0, pula_linha # pulando uma linha
	syscall
		
	
	sllv $t0, $t0, $t3 # sll
	li $v0, 4		
	la $a0, shift_left	
	syscall
	
	
	li $v0, 4 # lendo o numero	
	la $a0, p1		
	syscall
	
	
	li $v0, 1		
	move $a0, $t3		
	syscall
	
	
	li $v0, 4		
	la $a0, p2		
	syscall
	
	
	li $v0, 1		
	move $a0, $t0		
	syscall
	
	
	li $v0, 4		
	la $a0, pula_linha # pulando uma linha	
	syscall
	
	
	
	srlv $t1, $t1, $t3 #srl
	li $v0, 4		
	la $a0, shift_right	
	syscall
	
	
	li $v0, 4 # lendo um numero	
	la $a0, p1		
	syscall
	
	li $v0, 1		
	move $a0, $t3		
	syscall
	
	li $v0, 4		
	la $a0, p2		
	syscall
	
	li $v0, 1		
	move $a0, $t1		
	syscall
	
	li $v0, 4		
	la $a0, pula_linha
	syscall
		
	li $v0, 10 # comando para finalizar o programa	
	syscall 